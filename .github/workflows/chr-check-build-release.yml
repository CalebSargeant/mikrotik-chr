name: Check and Build CHR Image

on:
  schedule:
    - cron: "0 3 * * *"  # Runs daily at 03:00 UTC
  workflow_dispatch:

jobs:
  build-chr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Persist credentials so we can push the tag later.
          persist-credentials: true

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y expect unzip curl qemu-system-x86

      - name: Download latest CHR image
        run: |
          # Download the RouterOS CHR image zip file (change version if desired)
          curl -L -o chr.zip https://download.mikrotik.com/routeros/7.18.2/chr-7.18.2.img.zip
          unzip chr.zip -d .
          mv chr-7.18.2.img chr.img

      - name: Inject password using QEMU and Expect
        run: |
          chmod +x ./scripts/bake-password.exp
          ./scripts/bake-password.exp

      - name: Compress modified image
        run: gzip -c chr.img > chr.img.gz

      - name: Create Git Tag and Push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          # Reconfigure remote to use the token for authentication:
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
          # Create the tag if it doesn't exist yet:
          git tag v7.18.2-pw || echo "Tag v7.18.2-pw already exists"
          # Push the tag:
          git push origin v7.18.2-pw || echo "Tag push may have failed (tag may already exist)"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: 'v7.18.2-pw'
          name: "RouterOS 7.18.2 with Default Password"
          body: "Pre-baked CHR image with default password injected via QEMU+Expect."
          draft: false
          prerelease: false
          files: chr.img.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}