#!/usr/bin/expect -f
set timeout 60

# Start QEMU to boot the CHR image
spawn qemu-system-x86_64 \
    -m 256 \
    -nographic \
    -drive file=chr.img,format=raw \
    -netdev user,id=n1 \
    -device e1000,netdev=n1 \
    -virtfs local,path=.,mount_tag=hostshare,security_model=none \
    -fsdev local,id=myid,path=.,security_model=none \
    -device virtio-9p-pci,fsdev=myid,mount_tag=hostshare

# Login
expect {
    "MikroTik Login:" { send "admin\r" }
    timeout { puts "Timeout waiting for login prompt."; exit 1 }
}

# Password
expect {
    "Password:" { send "\r" }
    timeout { puts "Timeout waiting for password prompt."; exit 1 }
}

# License
expect {
    -re "Do you want to see the software license.*" { send "n\r" }
    timeout { puts "Timeout waiting for license prompt."; exit 1 }
}

# New password
expect {
    -re "new password> *" { send "BvUaiPG7U3CiVesQXhFA\r" }
    timeout { puts "Timeout waiting for new password prompt."; exit 1 }
}

# Confirm new password
expect {
    -re "repeat new password> *" { send "BvUaiPG7U3CiVesQXhFA\r" }
    timeout { puts "Timeout waiting for repeat new password prompt."; exit 1 }
}

# Wait for command prompt
expect {
    -re "] >" {
        send "/system identity set name=chr\r"
        expect -re "] >"

        send "/ip/service/disable ftp,www,telnet,api\r"
        expect -re "] >"

        # Add the DHCP script line by line instead of as one big string
        send "/system script add name=startup-dhcp\r"
        expect -re "] >"

        send "/system script set startup-dhcp source=\":delay 5\r\n"
        expect -re "] >"

        send ":foreach iface in=\[/interface ethernet find where running=yes\] do={\r\n"
        expect -re "] >"

        send "  /ip dhcp-client add interface=\[/interface get \\\$iface name\] disabled=no\r\n"
        expect -re "] >"

        send "  /system script remove startup-dhcp\r\n"
        expect -re "] >"

        send "  :log info \\\"DHCP setup done on \[/interface get \\\$iface name\]\\\"\r\n"
        expect -re "] >"

        send "  break\r\n"
        expect -re "] >"

        send "}\"\r"
        expect -re "] >"

        # Add scheduler to run script on startup
        send "/system scheduler add name=run-startup-dhcp on-event=startup-dhcp start-time=startup interval=0\r"
        expect -re "] >"

        puts "âœ… Added DHCP startup script and scheduler successfully"
    }
    timeout { puts "Timeout waiting for prompt after password change."; exit 1 }
}

# Exit the router
expect {
    -re "] >" { send "/quit\r" }
    timeout { puts "Timeout waiting for command prompt to quit."; exit 1 }
}

expect eof
exit 0