#!/usr/bin/expect -f
set timeout 60

# Start QEMU to boot the CHR image
spawn qemu-system-x86_64 \
    -m 256 \
    -nographic \
    -drive file=chr.img,format=raw \
    -netdev user,id=n1 \
    -device e1000,netdev=n1

# Login
expect {
    "MikroTik Login:" { send "admin\r" }
    timeout { puts "Timeout waiting for login prompt."; exit 1 }
}

# Password
expect {
    "Password:" { send "\r" }
    timeout { puts "Timeout waiting for password prompt."; exit 1 }
}

# License
expect {
    -re "Do you want to see the software license.*" { send "n\r" }
    timeout { puts "Timeout waiting for license prompt."; exit 1 }
}

# New password
expect {
    -re "new password> *" { send "BvUaiPG7U3CiVesQXhFA\r" }
    timeout { puts "Timeout waiting for new password prompt."; exit 1 }
}

# Confirm new password
expect {
    -re "repeat new password> *" { send "BvUaiPG7U3CiVesQXhFA\r" }
    timeout { puts "Timeout waiting for repeat new password prompt."; exit 1 }
}

# Wait for command prompt and set up the router
expect {
    -re "] >" {
        # Basic setup commands
        send "/system identity set name=chr\r"
        expect -re "] >"

        send "/ip/service/disable ftp,www,telnet,api\r"
        expect -re "] >"

        # Create a separate delayed startup script to handle DHCP
        send "/system script add name=configure-dhcp source={ :delay 10s; :foreach i in=[/interface ethernet find] do={ /ip dhcp-client add interface=[/interface get \$i name] disabled=no } }\r"
        expect -re "] >"

        # Add scheduler to run on startup
        send "/system scheduler add name=run-dhcp-setup on-event=configure-dhcp start-time=startup interval=0\r"
        expect -re "] >"

        puts "âœ… Added DHCP startup script and scheduler successfully"
    }
    timeout { puts "Timeout waiting for prompt after password change."; exit 1 }
}

# Exit the router
expect {
    -re "] >" { send "/quit\r" }
    timeout { puts "Timeout waiting for command prompt to quit."; exit 1 }
}

expect eof
exit 0