#!/usr/bin/expect -f
set timeout 60

# Start QEMU to boot the CHR image
spawn qemu-system-x86_64 -m 256 -nographic -drive file=chr.img,format=raw

# Expect the login prompt and send "admin"
expect {
    "MikroTik Login:" { send "admin\r" }
    timeout { puts "Timeout waiting for login prompt."; exit 1 }
}

# Expect the password prompt; send a blank password (just newline)
expect {
    "Password:" { send "\r" }
    timeout { puts "Timeout waiting for password prompt."; exit 1 }
}

# Expect the license prompt; answer "n" to not display the license
expect {
    -re "Do you want to see the software license.*" { send "n\r" }
    timeout { puts "Timeout waiting for license prompt."; exit 1 }
}

# Expect the prompt for a new password. This prompt is typically "new password>"
expect {
    -re "new password> *" { send "BvUaiPG7U3CiVesQXhFA\r" }
    timeout { puts "Timeout waiting for new password prompt."; exit 1 }
}

# Expect the prompt to repeat the new password.
expect {
    -re "repeat new password> *" { send "BvUaiPG7U3CiVesQXhFA\r" }
    timeout { puts "Timeout waiting for repeat new password prompt."; exit 1 }
}

# After setting the password, wait for the command prompt (usually ending with "] >")
expect {
    -re "] >" {
        # Optionally, you can set other parameters such as system identity here.
        send "/system identity set name=chr\r"
        send ":foreach iface in=[/interface ethernet find] do={/ip dhcp-client add interface=[/interface get $iface name] disabled=no}\r"
        send "/ip/service/disable ftp,www,telnet,api"
    }
    timeout { puts "Timeout waiting for command prompt after password change."; exit 1 }
}

# Allow a moment for the command to take effect, then quit the session.
expect {
    -re "] >" { send "/quit\r" }
    timeout { puts "Timeout waiting for command prompt to quit."; exit 1 }
}

# Wait for QEMU to shut down (EOF)
expect eof
exit 0